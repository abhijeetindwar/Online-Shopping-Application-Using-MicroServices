package com.orderservice1.orderService1.controller;

import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.orderservice1.orderService1.dto.OrderRequest;
import com.orderservice1.orderService1.service.OrderService;

import io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker;
import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("/api/order")
@RequiredArgsConstructor
public class OrderController {
     private final OrderService orderService; 
     
	@PostMapping
	@ResponseStatus(HttpStatus.CREATED)
	@CircuitBreaker(name="inventory",fallbackMethod = "fallBackMethod")
	public String creatOrder(@RequestBody OrderRequest order) {
		orderService.placeOrder(order);
		return "Order is Created";
	}
	public String fallBackMethod(OrderRequest orderRequest,RuntimeException runtimeException) {
		return "inventory service is not working";
	}
	
}
